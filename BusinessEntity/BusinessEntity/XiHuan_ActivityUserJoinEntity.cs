//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3615
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
//             Created By： tc01029
//             Created Time： 2010-12-7 13:33:31
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>
    /// 实体XiHuan_ActivityUserJoinEntity，对应表XiHuan_ActivityUserJoin
    /// </summary>
    [Serializable()]
    public sealed class XiHuan_ActivityUserJoinEntity : EntityObject
    {
        
        /// <summary>
        /// 对应表字段Id
        /// </summary>
        private int m_Id = 0;
        
        /// <summary>
        /// 对应表字段ActivityId
        /// </summary>
        private int m_ActivityId = 0;
        
        /// <summary>
        /// 对应表字段JoinUserName
        /// </summary>
        private string m_JoinUserName = string.Empty;
        
        /// <summary>
        /// 对应表字段JoinUserId
        /// </summary>
        private int m_JoinUserId = 0;
        
        /// <summary>
        /// 对应表字段JoinDate
        /// </summary>
        private System.DateTime m_JoinDate = DateTime.MinValue;
        
        /// <summary>
        /// 对应表字段JoinDesc
        /// </summary>
        private string m_JoinDesc = string.Empty;
        
        /// <summary>
        /// 对应表字段IsChecked
        /// </summary>
        private byte m_IsChecked = 0;
        
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public XiHuan_ActivityUserJoinEntity()
        {
        }
        
        /// <summary>
        /// 属性Id，对应数据库字段Id
        /// </summary>
        public int Id
        {
            get
            {
                return this.m_Id;
            }
            set
            {
                this.m_Id = value;
            }
        }
        
        /// <summary>
        /// 属性ActivityId，对应数据库字段ActivityId
        /// </summary>
        public int ActivityId
        {
            get
            {
                return this.m_ActivityId;
            }
            set
            {
                this.m_ActivityId = value;
            }
        }
        
        /// <summary>
        /// 属性JoinUserName，对应数据库字段JoinUserName
        /// </summary>
        public string JoinUserName
        {
            get
            {
                return this.m_JoinUserName;
            }
            set
            {
                this.m_JoinUserName = value;
            }
        }
        
        /// <summary>
        /// 属性JoinUserId，对应数据库字段JoinUserId
        /// </summary>
        public int JoinUserId
        {
            get
            {
                return this.m_JoinUserId;
            }
            set
            {
                this.m_JoinUserId = value;
            }
        }
        
        /// <summary>
        /// 属性JoinDate，对应数据库字段JoinDate
        /// </summary>
        public System.DateTime JoinDate
        {
            get
            {
                return this.m_JoinDate;
            }
            set
            {
                this.m_JoinDate = value;
            }
        }
        
        /// <summary>
        /// 属性JoinDesc，对应数据库字段JoinDesc
        /// </summary>
        public string JoinDesc
        {
            get
            {
                return this.m_JoinDesc;
            }
            set
            {
                this.m_JoinDesc = value;
            }
        }
        
        /// <summary>
        /// 属性IsChecked，对应数据库字段IsChecked
        /// </summary>
        public byte IsChecked
        {
            get
            {
                return this.m_IsChecked;
            }
            set
            {
                this.m_IsChecked = value;
            }
        }
        
        /// <summary>
        /// 静态方法，根据主键来获取实体,如果没有获取到则返回null
        /// </summary>
        public static XiHuan_ActivityUserJoinEntity GetEntityByPrimaryKey(int Id)
        {
            XiHuan_ActivityUserJoinEntity obj = new XiHuan_ActivityUserJoinEntity();
            obj.Id=Id;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// 重新OnEuqal方法，通过主键来判断
        /// </summary>
        public override bool Equals(object obj)
        {
            if ((obj == null) || !(obj is XiHuan_ActivityUserJoinEntity))
            {
                return false;
            }
            XiHuan_ActivityUserJoinEntity tmpObj = (XiHuan_ActivityUserJoinEntity)obj;
            if ((this.m_Id == tmpObj.m_Id))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        
        /// <summary>
        /// 重新GetHashCode方法，主键的Hash值累积
        /// </summary>
        public override int GetHashCode()
        {
             return this.m_Id.GetHashCode();
        }
        
        /// <summary>
        /// 表字段结构，封装了实体对应数据表的所有字段
        /// </summary>
        public struct Columns
        {
            
            /// <summary>
            /// 表字段Id
            /// </summary>
            public const string Id = "Id";
            
            /// <summary>
            /// 表字段ActivityId
            /// </summary>
            public const string ActivityId = "ActivityId";
            
            /// <summary>
            /// 表字段JoinUserName
            /// </summary>
            public const string JoinUserName = "JoinUserName";
            
            /// <summary>
            /// 表字段JoinUserId
            /// </summary>
            public const string JoinUserId = "JoinUserId";
            
            /// <summary>
            /// 表字段JoinDate
            /// </summary>
            public const string JoinDate = "JoinDate";
            
            /// <summary>
            /// 表字段JoinDesc
            /// </summary>
            public const string JoinDesc = "JoinDesc";
            
            /// <summary>
            /// 表字段IsChecked
            /// </summary>
            public const string IsChecked = "IsChecked";
        }
    }
}
