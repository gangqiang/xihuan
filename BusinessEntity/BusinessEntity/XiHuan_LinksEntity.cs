//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
// 
//             Powered By： SR3.1(SmartRobot For SmartPersistenceLayer 3.1) 听棠
//             Created By： tc01029
//             Created Time： 2009-5-19 15:26:01
// 
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>该类的摘要说明</summary>
    [Serializable()]
    public class XiHuan_LinksEntity : EntityObject
    {
        
        /// <summary>Id</summary>
        public const string @__ID = "Id";
        
        /// <summary>Name</summary>
        public const string @__NAME = "Name";
        
        /// <summary>Url</summary>
        public const string @__URL = "Url";
        
        /// <summary>Alt</summary>
        public const string @__ALT = "Alt";
        
        /// <summary>Sort</summary>
        public const string @__SORT = "Sort";
        
        /// <summary>CreateDate</summary>
        public const string @__CREATEDATE = "CreateDate";
        
        private int m_Id;
        
        private string m_Name;
        
        private string m_Url;
        
        private string m_Alt;
        
        private int m_Sort;
        
        private System.DateTime m_CreateDate = DateTime.MinValue;
        
        /// <summary>构造函数</summary>
        public XiHuan_LinksEntity()
        {
        }
        
        /// <summary>属性Id </summary>
        public int Id
        {
            get
            {
                return this.m_Id;
            }
            set
            {
                this.m_Id = value;
            }
        }
        
        /// <summary>属性Name </summary>
        public string Name
        {
            get
            {
                return this.m_Name;
            }
            set
            {
                this.m_Name = value;
            }
        }
        
        /// <summary>属性Url </summary>
        public string Url
        {
            get
            {
                return this.m_Url;
            }
            set
            {
                this.m_Url = value;
            }
        }
        
        /// <summary>属性Alt </summary>
        public string Alt
        {
            get
            {
                return this.m_Alt;
            }
            set
            {
                this.m_Alt = value;
            }
        }
        
        /// <summary>属性Sort </summary>
        public int Sort
        {
            get
            {
                return this.m_Sort;
            }
            set
            {
                this.m_Sort = value;
            }
        }
        
        /// <summary>属性CreateDate </summary>
        public System.DateTime CreateDate
        {
            get
            {
                return this.m_CreateDate;
            }
            set
            {
                this.m_CreateDate = value;
            }
        }
    }
    
    /// XiHuan_LinksEntity执行类
    public abstract class XiHuan_LinksEntityAction
    {
        
        private XiHuan_LinksEntityAction()
        {
        }
        
        public static void Save(XiHuan_LinksEntity obj)
        {
            if (obj!=null)
            {
                obj.Save();
            }
        }
        
        /// <summary>根据主键获取一个实体</summary>
        public static XiHuan_LinksEntity RetrieveAXiHuan_LinksEntity(int Id)
        {
            XiHuan_LinksEntity obj=new XiHuan_LinksEntity();
            obj.Id=Id;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static EntityContainer RetrieveXiHuan_LinksEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(XiHuan_LinksEntity));
            return rc.AsEntityContainer();
        }
        
        /// <summary>获取所有实体(EntityContainer)</summary>
        public static DataTable GetXiHuan_LinksEntity()
        {
            RetrieveCriteria rc=new RetrieveCriteria(typeof(XiHuan_LinksEntity));
            return rc.AsDataTable();
        }
    }
}
